import re
from enum import auto

from fastapi_utils.enums import StrEnum

from app.data.cache import cached_data


class UnicodeBlockName(StrEnum):

    NONE = auto()
    BASIC_LATIN = auto()
    LATIN_1_SUPPLEMENT = auto()
    LATIN_EXTENDED_A = auto()
    LATIN_EXTENDED_B = auto()
    IPA_EXTENSIONS = auto()
    SPACING_MODIFIER_LETTERS = auto()
    COMBINING_DIACRITICAL_MARKS = auto()
    GREEK_AND_COPTIC = auto()
    CYRILLIC = auto()
    CYRILLIC_SUPPLEMENT = auto()
    ARMENIAN = auto()
    HEBREW = auto()
    ARABIC = auto()
    SYRIAC = auto()
    ARABIC_SUPPLEMENT = auto()
    THAANA = auto()
    NKO = auto()
    SAMARITAN = auto()
    MANDAIC = auto()
    SYRIAC_SUPPLEMENT = auto()
    ARABIC_EXTENDED_B = auto()
    ARABIC_EXTENDED_A = auto()
    DEVANAGARI = auto()
    BENGALI = auto()
    GURMUKHI = auto()
    GUJARATI = auto()
    ORIYA = auto()
    TAMIL = auto()
    TELUGU = auto()
    KANNADA = auto()
    MALAYALAM = auto()
    SINHALA = auto()
    THAI = auto()
    LAO = auto()
    TIBETAN = auto()
    MYANMAR = auto()
    GEORGIAN = auto()
    HANGUL_JAMO = auto()
    ETHIOPIC = auto()
    ETHIOPIC_SUPPLEMENT = auto()
    CHEROKEE = auto()
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = auto()
    OGHAM = auto()
    RUNIC = auto()
    TAGALOG = auto()
    HANUNOO = auto()
    BUHID = auto()
    TAGBANWA = auto()
    KHMER = auto()
    MONGOLIAN = auto()
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = auto()
    LIMBU = auto()
    TAI_LE = auto()
    NEW_TAI_LUE = auto()
    KHMER_SYMBOLS = auto()
    BUGINESE = auto()
    TAI_THAM = auto()
    COMBINING_DIACRITICAL_MARKS_EXTENDED = auto()
    BALINESE = auto()
    SUNDANESE = auto()
    BATAK = auto()
    LEPCHA = auto()
    OL_CHIKI = auto()
    CYRILLIC_EXTENDED_C = auto()
    GEORGIAN_EXTENDED = auto()
    SUNDANESE_SUPPLEMENT = auto()
    VEDIC_EXTENSIONS = auto()
    PHONETIC_EXTENSIONS = auto()
    PHONETIC_EXTENSIONS_SUPPLEMENT = auto()
    COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = auto()
    LATIN_EXTENDED_ADDITIONAL = auto()
    GREEK_EXTENDED = auto()
    GENERAL_PUNCTUATION = auto()
    SUPERSCRIPTS_AND_SUBSCRIPTS = auto()
    CURRENCY_SYMBOLS = auto()
    COMBINING_DIACRITICAL_MARKS_FOR_SYMBOLS = auto()
    LETTERLIKE_SYMBOLS = auto()
    NUMBER_FORMS = auto()
    ARROWS = auto()
    MATHEMATICAL_OPERATORS = auto()
    MISCELLANEOUS_TECHNICAL = auto()
    CONTROL_PICTURES = auto()
    OPTICAL_CHARACTER_RECOGNITION = auto()
    ENCLOSED_ALPHANUMERICS = auto()
    BOX_DRAWING = auto()
    BLOCK_ELEMENTS = auto()
    GEOMETRIC_SHAPES = auto()
    MISCELLANEOUS_SYMBOLS = auto()
    DINGBATS = auto()
    MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = auto()
    SUPPLEMENTAL_ARROWS_A = auto()
    BRAILLE_PATTERNS = auto()
    SUPPLEMENTAL_ARROWS_B = auto()
    MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = auto()
    SUPPLEMENTAL_MATHEMATICAL_OPERATORS = auto()
    MISCELLANEOUS_SYMBOLS_AND_ARROWS = auto()
    GLAGOLITIC = auto()
    LATIN_EXTENDED_C = auto()
    COPTIC = auto()
    GEORGIAN_SUPPLEMENT = auto()
    TIFINAGH = auto()
    ETHIOPIC_EXTENDED = auto()
    CYRILLIC_EXTENDED_A = auto()
    SUPPLEMENTAL_PUNCTUATION = auto()
    CJK_RADICALS_SUPPLEMENT = auto()
    KANGXI_RADICALS = auto()
    IDEOGRAPHIC_DESCRIPTION_CHARACTERS = auto()
    CJK_SYMBOLS_AND_PUNCTUATION = auto()
    HIRAGANA = auto()
    KATAKANA = auto()
    BOPOMOFO = auto()
    HANGUL_COMPATIBILITY_JAMO = auto()
    KANBUN = auto()
    BOPOMOFO_EXTENDED = auto()
    CJK_STROKES = auto()
    KATAKANA_PHONETIC_EXTENSIONS = auto()
    ENCLOSED_CJK_LETTERS_AND_MONTHS = auto()
    CJK_COMPATIBILITY = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = auto()
    YIJING_HEXAGRAM_SYMBOLS = auto()
    CJK_UNIFIED_IDEOGRAPHS = auto()
    YI_SYLLABLES = auto()
    YI_RADICALS = auto()
    LISU = auto()
    VAI = auto()
    CYRILLIC_EXTENDED_B = auto()
    BAMUM = auto()
    MODIFIER_TONE_LETTERS = auto()
    LATIN_EXTENDED_D = auto()
    SYLOTI_NAGRI = auto()
    COMMON_INDIC_NUMBER_FORMS = auto()
    PHAGS_PA = auto()
    SAURASHTRA = auto()
    DEVANAGARI_EXTENDED = auto()
    KAYAH_LI = auto()
    REJANG = auto()
    HANGUL_JAMO_EXTENDED_A = auto()
    JAVANESE = auto()
    MYANMAR_EXTENDED_B = auto()
    CHAM = auto()
    MYANMAR_EXTENDED_A = auto()
    TAI_VIET = auto()
    MEETEI_MAYEK_EXTENSIONS = auto()
    ETHIOPIC_EXTENDED_A = auto()
    LATIN_EXTENDED_E = auto()
    CHEROKEE_SUPPLEMENT = auto()
    MEETEI_MAYEK = auto()
    HANGUL_SYLLABLES = auto()
    HANGUL_JAMO_EXTENDED_B = auto()
    HIGH_SURROGATES = auto()
    HIGH_PRIVATE_USE_SURROGATES = auto()
    LOW_SURROGATES = auto()
    PRIVATE_USE_AREA = auto()
    CJK_COMPATIBILITY_IDEOGRAPHS = auto()
    ALPHABETIC_PRESENTATION_FORMS = auto()
    ARABIC_PRESENTATION_FORMS_A = auto()
    VARIATION_SELECTORS = auto()
    VERTICAL_FORMS = auto()
    COMBINING_HALF_MARKS = auto()
    CJK_COMPATIBILITY_FORMS = auto()
    SMALL_FORM_VARIANTS = auto()
    ARABIC_PRESENTATION_FORMS_B = auto()
    HALFWIDTH_AND_FULLWIDTH_FORMS = auto()
    SPECIALS = auto()
    LINEAR_B_SYLLABARY = auto()
    LINEAR_B_IDEOGRAMS = auto()
    AEGEAN_NUMBERS = auto()
    ANCIENT_GREEK_NUMBERS = auto()
    ANCIENT_SYMBOLS = auto()
    PHAISTOS_DISC = auto()
    LYCIAN = auto()
    CARIAN = auto()
    COPTIC_EPACT_NUMBERS = auto()
    OLD_ITALIC = auto()
    GOTHIC = auto()
    OLD_PERMIC = auto()
    UGARITIC = auto()
    OLD_PERSIAN = auto()
    DESERET = auto()
    SHAVIAN = auto()
    OSMANYA = auto()
    OSAGE = auto()
    ELBASAN = auto()
    CAUCASIAN_ALBANIAN = auto()
    VITHKUQI = auto()
    LINEAR_A = auto()
    LATIN_EXTENDED_F = auto()
    CYPRIOT_SYLLABARY = auto()
    IMPERIAL_ARAMAIC = auto()
    PALMYRENE = auto()
    NABATAEAN = auto()
    HATRAN = auto()
    PHOENICIAN = auto()
    LYDIAN = auto()
    MEROITIC_HIEROGLYPHS = auto()
    MEROITIC_CURSIVE = auto()
    KHAROSHTHI = auto()
    OLD_SOUTH_ARABIAN = auto()
    OLD_NORTH_ARABIAN = auto()
    MANICHAEAN = auto()
    AVESTAN = auto()
    INSCRIPTIONAL_PARTHIAN = auto()
    INSCRIPTIONAL_PAHLAVI = auto()
    PSALTER_PAHLAVI = auto()
    OLD_TURKIC = auto()
    OLD_HUNGARIAN = auto()
    HANIFI_ROHINGYA = auto()
    RUMI_NUMERAL_SYMBOLS = auto()
    YEZIDI = auto()
    ARABIC_EXTENDED_C = auto()
    OLD_SOGDIAN = auto()
    SOGDIAN = auto()
    OLD_UYGHUR = auto()
    CHORASMIAN = auto()
    ELYMAIC = auto()
    BRAHMI = auto()
    KAITHI = auto()
    SORA_SOMPENG = auto()
    CHAKMA = auto()
    MAHAJANI = auto()
    SHARADA = auto()
    SINHALA_ARCHAIC_NUMBERS = auto()
    KHOJKI = auto()
    MULTANI = auto()
    KHUDAWADI = auto()
    GRANTHA = auto()
    NEWA = auto()
    TIRHUTA = auto()
    SIDDHAM = auto()
    MODI = auto()
    MONGOLIAN_SUPPLEMENT = auto()
    TAKRI = auto()
    AHOM = auto()
    DOGRA = auto()
    WARANG_CITI = auto()
    DIVES_AKURU = auto()
    NANDINAGARI = auto()
    ZANABAZAR_SQUARE = auto()
    SOYOMBO = auto()
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A = auto()
    PAU_CIN_HAU = auto()
    DEVANAGARI_EXTENDED_A = auto()
    BHAIKSUKI = auto()
    MARCHEN = auto()
    MASARAM_GONDI = auto()
    GUNJALA_GONDI = auto()
    MAKASAR = auto()
    KAWI = auto()
    LISU_SUPPLEMENT = auto()
    TAMIL_SUPPLEMENT = auto()
    CUNEIFORM = auto()
    CUNEIFORM_NUMBERS_AND_PUNCTUATION = auto()
    EARLY_DYNASTIC_CUNEIFORM = auto()
    CYPRO_MINOAN = auto()
    EGYPTIAN_HIEROGLYPHS = auto()
    EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS = auto()
    ANATOLIAN_HIEROGLYPHS = auto()
    BAMUM_SUPPLEMENT = auto()
    MRO = auto()
    TANGSA = auto()
    BASSA_VAH = auto()
    PAHAWH_HMONG = auto()
    MEDEFAIDRIN = auto()
    MIAO = auto()
    IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION = auto()
    TANGUT = auto()
    TANGUT_COMPONENTS = auto()
    KHITAN_SMALL_SCRIPT = auto()
    TANGUT_SUPPLEMENT = auto()
    KANA_EXTENDED_B = auto()
    KANA_SUPPLEMENT = auto()
    KANA_EXTENDED_A = auto()
    SMALL_KANA_EXTENSION = auto()
    NUSHU = auto()
    DUPLOYAN = auto()
    SHORTHAND_FORMAT_CONTROLS = auto()
    ZNAMENNY_MUSICAL_NOTATION = auto()
    BYZANTINE_MUSICAL_SYMBOLS = auto()
    MUSICAL_SYMBOLS = auto()
    ANCIENT_GREEK_MUSICAL_NOTATION = auto()
    KAKTOVIK_NUMERALS = auto()
    MAYAN_NUMERALS = auto()
    TAI_XUAN_JING_SYMBOLS = auto()
    COUNTING_ROD_NUMERALS = auto()
    MATHEMATICAL_ALPHANUMERIC_SYMBOLS = auto()
    SUTTON_SIGNWRITING = auto()
    LATIN_EXTENDED_G = auto()
    GLAGOLITIC_SUPPLEMENT = auto()
    CYRILLIC_EXTENDED_D = auto()
    NYIAKENG_PUACHUE_HMONG = auto()
    TOTO = auto()
    WANCHO = auto()
    NAG_MUNDARI = auto()
    ETHIOPIC_EXTENDED_B = auto()
    MENDE_KIKAKUI = auto()
    ADLAM = auto()
    INDIC_SIYAQ_NUMBERS = auto()
    OTTOMAN_SIYAQ_NUMBERS = auto()
    ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = auto()
    MAHJONG_TILES = auto()
    DOMINO_TILES = auto()
    PLAYING_CARDS = auto()
    ENCLOSED_ALPHANUMERIC_SUPPLEMENT = auto()
    ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = auto()
    MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = auto()
    EMOTICONS = auto()
    ORNAMENTAL_DINGBATS = auto()
    TRANSPORT_AND_MAP_SYMBOLS = auto()
    ALCHEMICAL_SYMBOLS = auto()
    GEOMETRIC_SHAPES_EXTENDED = auto()
    SUPPLEMENTAL_ARROWS_C = auto()
    SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS = auto()
    CHESS_SYMBOLS = auto()
    SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A = auto()
    SYMBOLS_FOR_LEGACY_COMPUTING = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F = auto()
    CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G = auto()
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H = auto()
    TAGS = auto()
    VARIATION_SELECTORS_SUPPLEMENT = auto()
    SUPPLEMENTARY_PRIVATE_USE_AREA_A = auto()
    SUPPLEMENTARY_PRIVATE_USE_AREA_B = auto()

    def __str__(self) -> str:
        special_cases = {
            "LATIN_1_SUPPLEMENT": "Latin-1 Supplement",
            "LATIN_EXTENDED_A": "Latin Extended-A",
            "LATIN_EXTENDED_B": "Latin Extended-B",
            "ARABIC_EXTENDED_B": "Arabic Extended-B",
            "ARABIC_EXTENDED_A": "Arabic Extended-A",
            "CYRILLIC_EXTENDED_C": "Cyrillic Extended-C",
            "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A": "Miscellaneous Mathematical Symbols-A",
            "SUPPLEMENTAL_ARROWS_A": "Supplemental Arrows-A",
            "SUPPLEMENTAL_ARROWS_B": "Supplemental Arrows-B",
            "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B": "Miscellaneous Mathematical Symbols-B",
            "LATIN_EXTENDED_C": "Latin Extended-C",
            "CYRILLIC_EXTENDED_A": "Cyrillic Extended-A",
            "CYRILLIC_EXTENDED_B": "Cyrillic Extended-B",
            "LATIN_EXTENDED_D": "Latin Extended-D",
            "PHAGS_PA": "Phags-pa",
            "HANGUL_JAMO_EXTENDED_A": "Hangul Jamo Extended-A",
            "MYANMAR_EXTENDED_B": "Myanmar Extended-B",
            "MYANMAR_EXTENDED_A": "Myanmar Extended-A",
            "ETHIOPIC_EXTENDED_A": "Ethiopic Extended-A",
            "LATIN_EXTENDED_E": "Latin Extended-E",
            "HANGUL_JAMO_EXTENDED_B": "Hangul Jamo Extended-B",
            "ARABIC_PRESENTATION_FORMS_A": "Arabic Presentation Forms-A",
            "ARABIC_PRESENTATION_FORMS_B": "Arabic Presentation Forms-B",
            "LATIN_EXTENDED_F": "Latin Extended-F",
            "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A": "Unified Canadian Aboriginal Syllabics Extended-A",
            "CYPRO_MINOAN": "Cypro-Minoan",
            "KANA_EXTENDED_B": "Kana Extended-B",
            "KANA_EXTENDED_A": "Kana Extended-A",
            "LATIN_EXTENDED_G": "Latin Extended-G",
            "ETHIOPIC_EXTENDED_B": "Ethiopic Extended-B",
            "SUPPLEMENTAL_ARROWS_C": "Supplemental Arrows-C",
            "SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A": "Symbols and Pictographs Extended-A",
            "SUPPLEMENTARY_PRIVATE_USE_AREA_A": "Supplementary Private Use Area-A",
            "SUPPLEMENTARY_PRIVATE_USE_AREA_B": "Supplementary Private Use Area-B",
            "ARABIC_EXTENDED_C": "Arabic Extended-C",
            "DEVANAGARI_EXTENDED_A": "Devanagari Extended-A",
            "CYRILLIC_EXTENDED_D": "Cyrillic Extended-D",
        }
        if self.name in special_cases:
            return special_cases[self.name]
        name = (
            self.name.replace("_", " ")
            .title()
            .replace("Cjk", "CJK")
            .replace("And", "and")
            .replace("Ipa", "IPA")
            .replace("Nko", "NKo")
            .replace("Signwriting", "SignWriting")
        )
        return re.sub(r"For\b", "for", name)

    @property
    def block_id(self) -> int:
        block = cached_data.get_unicode_block_by_name(str(self))
        return int(block["id"])

    @classmethod
    def from_block_id(cls, block_id):
        block = cached_data.get_unicode_block_by_id(block_id)
        block_name = str(block["name"]).upper().replace("-", "_").replace(" ", "_")
        return cls(block_name)
